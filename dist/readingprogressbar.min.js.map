{"version":3,"file":"readingprogressbar.min.js","sources":["../src/ts/constants.ts","../src/ts/Viewport.ts","../src/ts/ProgressBar.ts","../src/ts/ReadingProgressBar.ts"],"sourcesContent":["import ReadingProgressBarOptions from \"./interfaces/ReadingProgressBarOptions.interface\";\r\n\r\nexport const DEFAULT_OPTIONS: ReadingProgressBarOptions = {\r\n    contentContainerClassName: 'blogPost',\r\n    cssClass: 'readingProgressBar',\r\n    throttleTimeMs: 0\r\n} as const;\r\n\r\nexport const CLASS_NAMES = {\r\n    progressBarElement: 'readingProgressBar',\r\n    trackElement: 'readingProgressBar__track'\r\n} as const;","import { BehaviorSubject, combineLatest, fromEvent, merge, Observable } from 'rxjs';\r\nimport { tap, throttleTime, debounceTime, map, filter, distinctUntilKeyChanged } from 'rxjs/operators';\r\n\r\nimport { Container } from './interfaces/Container.interface';\r\nimport { TrackedContainer } from './interfaces/TrackedContainer.interface';\r\nimport ContainerPosition from './interfaces/ContainerPosition.interface';\r\n\r\ninterface ViewportChange { \r\n    activeContainerId: number | string | Symbol; \r\n    scrollPercentage: number;\r\n}\r\n\r\nexport class Viewport {\r\n    public viewportChange$: BehaviorSubject<ViewportChange>;\r\n    \r\n    private scroll$: Observable<Event> = null;\r\n    private resize$: Observable<Event> = null;\r\n    private activeContainer$: Observable<TrackedContainer> = null;\r\n    private lastActiveContainer$: Observable<TrackedContainer> = null;\r\n\r\n    private viewportHeight: number = null;\r\n    private trackedContainers = new Set<TrackedContainer>();\r\n\r\n    constructor(throttleTimeMs: number, trackedContainers: Container[] = []) {\r\n        let activeContainer: TrackedContainer = null;\r\n\r\n        this.updateViewportHeight();\r\n\r\n        if (trackedContainers) {\r\n            this.addTrackedContainers(trackedContainers);\r\n            activeContainer = this.getActiveContainer();\r\n        }\r\n        \r\n        this.viewportChange$ = new BehaviorSubject({\r\n            activeContainerId: activeContainer ? activeContainer.id : null,\r\n            scrollPercentage: activeContainer ? this.calculateScrollPercentage(activeContainer) : 0\r\n        });\r\n\r\n        this.scroll$ = fromEvent(window, 'scroll');\r\n        this.resize$ = fromEvent(window, 'resize').pipe(\r\n            debounceTime(300),\r\n            tap(() => this.updateViewportHeight())\r\n        );\r\n\r\n        this.activeContainer$ = merge(this.scroll$, this.resize$).pipe(\r\n            throttleTime(throttleTimeMs, null, {\r\n                trailing: true,\r\n                leading: false\r\n            }),\r\n            map(() => this.getActiveContainer())\r\n        );\r\n\r\n        this.lastActiveContainer$ = this.activeContainer$.pipe(\r\n            filter(container => !!container),\r\n            distinctUntilKeyChanged('id')\r\n        );\r\n\r\n        // TODO: Add dispose() method that will clean up all the subscriptions\r\n        combineLatest([this.activeContainer$, this.lastActiveContainer$])\r\n            .pipe(map(data => this.getViewportState(...data)))\r\n            .subscribe(data => this.viewportChange$.next(data));\r\n    }\r\n\r\n    public addTrackedContainer(container: Container): TrackedContainer[] {\r\n        // TODO: Validate uniqueness of IDs\r\n\r\n        const trackedContainer: TrackedContainer = {\r\n            ...container,\r\n            position: this.getContainerPosition(container.element)\r\n        };\r\n\r\n        this.trackedContainers.add(trackedContainer);\r\n\r\n        return Array.from(this.trackedContainers);\r\n    }\r\n\r\n    public addTrackedContainers(containers: Container[]) {\r\n        containers.forEach(container => this.addTrackedContainer(container));\r\n\r\n        return Array.from(this.trackedContainers);\r\n    }\r\n\r\n    public removeTrackedContainer(containerId): boolean {\r\n        const trackedContainers = this.trackedContainers;\r\n        const containerToRemove = Array.from(trackedContainers).find(({ id }) => id === containerId);\r\n\r\n        if (containerToRemove) {\r\n            return this.trackedContainers.delete(containerToRemove);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public clearTrackedContainers(): void {\r\n        this.trackedContainers.clear();\r\n    }\r\n\r\n    /**\r\n     * A container is considered \"active\", when its upper edge is not below viewport,\r\n     * and its bottom edge is below the viewport\r\n     */\r\n    public getActiveContainer(): TrackedContainer {\r\n        const trackedContainers = Array.from(this.trackedContainers);\r\n\r\n        return trackedContainers.find(container => this.isActive(container));\r\n    }\r\n\r\n    private getViewportState(activeContainer: TrackedContainer, lastActiveContainer: TrackedContainer): ViewportChange {\r\n        let scrollPercentage = activeContainer ? this.calculateScrollPercentage(activeContainer) : 0;\r\n\r\n        if (lastActiveContainer && !activeContainer) {\r\n            scrollPercentage = this.scrolledPast(lastActiveContainer) ? 100 : 0;\r\n        }\r\n\r\n        return {\r\n            activeContainerId: activeContainer ? activeContainer.id : null,\r\n            scrollPercentage\r\n        };\r\n    }\r\n\r\n    private calculateScrollPercentage(container: TrackedContainer): number {\r\n        const viewportTopPos = this.getScrollY();\r\n        const viewportBottomPos = viewportTopPos + this.viewportHeight;\r\n        const isActive = this.isActive(container);\r\n        const isInInitialView = container.position.top < this.viewportHeight;\r\n\r\n        if (isActive && isInInitialView) {\r\n            const totalScrollDistance = container.position.bottom - this.viewportHeight;\r\n            const scrolledDistance = totalScrollDistance - (container.position.bottom - viewportBottomPos);\r\n\r\n            return Math.round((scrolledDistance / totalScrollDistance) * 1000) / 10;\r\n        } else if (isActive) {\r\n            const containerHeight = container.position.bottom - container.position.top;\r\n            const remainingDistance = container.position.bottom - viewportBottomPos;\r\n            const scrolledDistance = containerHeight - remainingDistance;\r\n            \r\n            return Math.round((scrolledDistance / containerHeight) * 1000) / 10;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private isActive({ position }: TrackedContainer) {\r\n        const viewportTopPos = this.getScrollY();\r\n        const viewportBottomPos = viewportTopPos + this.viewportHeight;\r\n        const containerTopEdgeBelowViewport = position.top > viewportBottomPos;\r\n        const containerBottomEdgeBelowViewport = position.bottom > viewportBottomPos;\r\n\r\n        return !containerTopEdgeBelowViewport && containerBottomEdgeBelowViewport;\r\n    }\r\n\r\n    private scrolledPast(container: TrackedContainer): boolean {\r\n        const viewportTopPos = this.getScrollY();\r\n        const viewportBottomPos = viewportTopPos + this.viewportHeight;\r\n        const containerBottomAboveViewportBottom = container.position.bottom < viewportBottomPos;\r\n\r\n        return containerBottomAboveViewportBottom;\r\n    }\r\n\r\n    private getContainerPosition(element: Element): ContainerPosition {\r\n        const rect = element.getBoundingClientRect();\r\n        const scrollY = this.getScrollY();\r\n\r\n        return {\r\n            top: rect.top + scrollY,\r\n            bottom: rect.bottom + scrollY\r\n        }\r\n    }\r\n\r\n    private updateViewportHeight() {\r\n        const documentElement = document.documentElement;\r\n\r\n        this.viewportHeight = documentElement.clientHeight;\r\n    }\r\n\r\n    private getScrollY(): number {\r\n        return window.scrollY;\r\n    }\r\n}\r\n","import { CLASS_NAMES } from \"./constants\";\r\nimport ReadingProgressBarOptions from \"./interfaces/ReadingProgressBarOptions.interface\";\r\n\r\nexport class ProgressBar {\r\n    private progressBarTrack: HTMLDivElement;\r\n    private value = 0;\r\n\r\n    constructor(\r\n        private element: Element,\r\n        private options: ReadingProgressBarOptions\r\n    ) {\r\n        this.initialize();\r\n    }\r\n\r\n    public setStatePercentage(value: number) {\r\n        let newValue = value;\r\n\r\n        if (value > 100) {\r\n            newValue = 100;\r\n        } else if (newValue < 0) {\r\n            newValue = 0;\r\n        }\r\n\r\n        this.applyState(newValue);\r\n    }\r\n\r\n    public dispose() {\r\n        this.progressBarTrack.remove();\r\n        this.progressBarTrack = null;\r\n        this.element.classList.remove(CLASS_NAMES.progressBarElement);\r\n\r\n        if (this.options.cssClass) {\r\n            this.element.classList.remove(this.options.cssClass);\r\n        }\r\n\r\n        this.element = null;\r\n    }\r\n\r\n    private applyState(value: number) {\r\n        this.value = value;\r\n\r\n        requestAnimationFrame(() => {\r\n            this.progressBarTrack.style.width = `${value}%`;\r\n        });\r\n    }\r\n\r\n    private initialize() {\r\n        const progressBarTrack = document.createElement('div');\r\n\r\n        progressBarTrack.classList.add(CLASS_NAMES.trackElement);\r\n        this.element.classList.add(this.options.cssClass);\r\n        this.element.classList.add(CLASS_NAMES.progressBarElement);\r\n        this.element.appendChild(progressBarTrack);\r\n        this.progressBarTrack = progressBarTrack;\r\n    }\r\n}\r\n","import ReadingProgressBarOptions from \"./interfaces/ReadingProgressBarOptions.interface\";\r\n\r\nimport { DEFAULT_OPTIONS } from \"./constants\";\r\nimport { Viewport } from \"./Viewport\";\r\nimport { Container } from \"./interfaces/Container.interface\";\r\nimport { ProgressBar } from \"./ProgressBar\";\r\n\r\nclass ReadingProgressBar {\r\n    private viewport: Viewport;\r\n    private progressBar: ProgressBar;\r\n    private options: ReadingProgressBarOptions;\r\n\r\n    constructor(\r\n        element: Element,\r\n        options: Partial<ReadingProgressBarOptions> = {}\r\n    ) {\r\n        this.options = { ...DEFAULT_OPTIONS, ...options };\r\n        this.progressBar = new ProgressBar(element, this.options);\r\n        this.viewport = new Viewport(\r\n            this.options.throttleTimeMs,\r\n            this.getTrackedContainers(this.options.contentContainerClassName)\r\n        );\r\n        this.reset();\r\n\r\n        this.viewport.viewportChange$.subscribe(({ scrollPercentage }) => {\r\n            this.progressBar.setStatePercentage(scrollPercentage);\r\n        });\r\n    }\r\n\r\n    public reset() {\r\n        this.redetectContentContainers();\r\n    }\r\n\r\n    private redetectContentContainers() {\r\n        const { contentContainerClassName } = this.options;\r\n\r\n        this.viewport.addTrackedContainers(\r\n            this.getTrackedContainers(contentContainerClassName)\r\n        );\r\n    }\r\n\r\n    private getTrackedContainers(contentContainerClassName: string) {\r\n        const containers = document.getElementsByClassName(contentContainerClassName);\r\n        const containersToTrack: Container[] = Array.from(containers)\r\n            .map((element, index) => ({\r\n                id: index,\r\n                element\r\n            }));\r\n        \r\n        return containersToTrack;\r\n    }\r\n}\r\n\r\nexport { ReadingProgressBar };"],"names":["__defProp","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","BehaviorSubject","fromEvent","debounceTime","tap","merge","throttleTime","map","filter","distinctUntilKeyChanged","combineLatest"],"mappings":"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"}