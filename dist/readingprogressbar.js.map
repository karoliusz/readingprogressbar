{"version":3,"file":"readingprogressbar.js","sources":["../src/ts/constants.ts","../src/ts/Viewport.ts","../src/ts/ProgressBar.ts","../src/ts/ReadingProgressBar.ts"],"sourcesContent":["import ReadingProgressBarOptions from \"./interfaces/ReadingProgressBarOptions.interface\";\r\n\r\nexport const DEFAULT_OPTIONS: ReadingProgressBarOptions = {\r\n    contentContainerClassName: 'blogPost',\r\n    cssClass: 'readingProgressBar',\r\n    throttleTimeMs: 0\r\n} as const;\r\n\r\nexport const CLASS_NAMES = {\r\n    progressBarElement: 'readingProgressBar',\r\n    trackElement: 'readingProgressBar__track'\r\n} as const;","import { BehaviorSubject, combineLatest, fromEvent, merge, Observable } from 'rxjs';\r\nimport { tap, throttleTime, debounceTime, map, filter, distinctUntilKeyChanged } from 'rxjs/operators';\r\n\r\nimport { Container } from './interfaces/Container.interface';\r\nimport { TrackedContainer } from './interfaces/TrackedContainer.interface';\r\nimport ContainerPosition from './interfaces/ContainerPosition.interface';\r\n\r\ninterface ViewportChange { \r\n    activeContainerId: number | string | Symbol; \r\n    scrollPercentage: number;\r\n}\r\n\r\nexport class Viewport {\r\n    public viewportChange$: BehaviorSubject<ViewportChange>;\r\n    \r\n    private scroll$: Observable<Event> = null;\r\n    private resize$: Observable<Event> = null;\r\n    private activeContainer$: Observable<TrackedContainer> = null;\r\n    private lastActiveContainer$: Observable<TrackedContainer> = null;\r\n\r\n    private viewportHeight: number = null;\r\n    private trackedContainers = new Set<TrackedContainer>();\r\n\r\n    constructor(throttleTimeMs: number, trackedContainers: Container[] = []) {\r\n        let activeContainer: TrackedContainer = null;\r\n\r\n        this.updateViewportHeight();\r\n\r\n        if (trackedContainers) {\r\n            this.addTrackedContainers(trackedContainers);\r\n            activeContainer = this.getActiveContainer();\r\n        }\r\n        \r\n        this.viewportChange$ = new BehaviorSubject({\r\n            activeContainerId: activeContainer ? activeContainer.id : null,\r\n            scrollPercentage: activeContainer ? this.calculateScrollPercentage(activeContainer) : 0\r\n        });\r\n\r\n        this.scroll$ = fromEvent(window, 'scroll');\r\n        this.resize$ = fromEvent(window, 'resize').pipe(\r\n            debounceTime(300),\r\n            tap(() => this.updateViewportHeight())\r\n        );\r\n\r\n        this.activeContainer$ = merge(this.scroll$, this.resize$).pipe(\r\n            throttleTime(throttleTimeMs, null, {\r\n                trailing: true,\r\n                leading: false\r\n            }),\r\n            map(() => this.getActiveContainer())\r\n        );\r\n\r\n        this.lastActiveContainer$ = this.activeContainer$.pipe(\r\n            filter(container => !!container),\r\n            distinctUntilKeyChanged('id')\r\n        );\r\n\r\n        // TODO: Add dispose() method that will clean up all the subscriptions\r\n        combineLatest([this.activeContainer$, this.lastActiveContainer$])\r\n            .pipe(map(data => this.getViewportState(...data)))\r\n            .subscribe(data => this.viewportChange$.next(data));\r\n    }\r\n\r\n    public addTrackedContainer(container: Container): TrackedContainer[] {\r\n        // TODO: Validate uniqueness of IDs\r\n\r\n        const trackedContainer: TrackedContainer = {\r\n            ...container,\r\n            position: this.getContainerPosition(container.element)\r\n        };\r\n\r\n        this.trackedContainers.add(trackedContainer);\r\n\r\n        return Array.from(this.trackedContainers);\r\n    }\r\n\r\n    public addTrackedContainers(containers: Container[]) {\r\n        containers.forEach(container => this.addTrackedContainer(container));\r\n\r\n        return Array.from(this.trackedContainers);\r\n    }\r\n\r\n    public removeTrackedContainer(containerId): boolean {\r\n        const trackedContainers = this.trackedContainers;\r\n        const containerToRemove = Array.from(trackedContainers).find(({ id }) => id === containerId);\r\n\r\n        if (containerToRemove) {\r\n            return this.trackedContainers.delete(containerToRemove);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public clearTrackedContainers(): void {\r\n        this.trackedContainers.clear();\r\n    }\r\n\r\n    /**\r\n     * A container is considered \"active\", when its upper edge is not below viewport,\r\n     * and its bottom edge is below the viewport\r\n     */\r\n    public getActiveContainer(): TrackedContainer {\r\n        const trackedContainers = Array.from(this.trackedContainers);\r\n\r\n        return trackedContainers.find(container => this.isActive(container));\r\n    }\r\n\r\n    private getViewportState(activeContainer: TrackedContainer, lastActiveContainer: TrackedContainer): ViewportChange {\r\n        let scrollPercentage = activeContainer ? this.calculateScrollPercentage(activeContainer) : 0;\r\n\r\n        if (lastActiveContainer && !activeContainer) {\r\n            scrollPercentage = this.scrolledPast(lastActiveContainer) ? 100 : 0;\r\n        }\r\n\r\n        return {\r\n            activeContainerId: activeContainer ? activeContainer.id : null,\r\n            scrollPercentage\r\n        };\r\n    }\r\n\r\n    private calculateScrollPercentage(container: TrackedContainer): number {\r\n        const viewportTopPos = this.getScrollY();\r\n        const viewportBottomPos = viewportTopPos + this.viewportHeight;\r\n        const isActive = this.isActive(container);\r\n        const isInInitialView = container.position.top < this.viewportHeight;\r\n\r\n        if (isActive && isInInitialView) {\r\n            const totalScrollDistance = container.position.bottom - this.viewportHeight;\r\n            const scrolledDistance = totalScrollDistance - (container.position.bottom - viewportBottomPos);\r\n\r\n            return Math.round((scrolledDistance / totalScrollDistance) * 1000) / 10;\r\n        } else if (isActive) {\r\n            const containerHeight = container.position.bottom - container.position.top;\r\n            const remainingDistance = container.position.bottom - viewportBottomPos;\r\n            const scrolledDistance = containerHeight - remainingDistance;\r\n            \r\n            return Math.round((scrolledDistance / containerHeight) * 1000) / 10;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private isActive({ position }: TrackedContainer) {\r\n        const viewportTopPos = this.getScrollY();\r\n        const viewportBottomPos = viewportTopPos + this.viewportHeight;\r\n        const containerTopEdgeBelowViewport = position.top > viewportBottomPos;\r\n        const containerBottomEdgeBelowViewport = position.bottom > viewportBottomPos;\r\n\r\n        return !containerTopEdgeBelowViewport && containerBottomEdgeBelowViewport;\r\n    }\r\n\r\n    private scrolledPast(container: TrackedContainer): boolean {\r\n        const viewportTopPos = this.getScrollY();\r\n        const viewportBottomPos = viewportTopPos + this.viewportHeight;\r\n        const containerBottomAboveViewportBottom = container.position.bottom < viewportBottomPos;\r\n\r\n        return containerBottomAboveViewportBottom;\r\n    }\r\n\r\n    private getContainerPosition(element: Element): ContainerPosition {\r\n        const rect = element.getBoundingClientRect();\r\n        const scrollY = this.getScrollY();\r\n\r\n        return {\r\n            top: rect.top + scrollY,\r\n            bottom: rect.bottom + scrollY\r\n        }\r\n    }\r\n\r\n    private updateViewportHeight() {\r\n        const documentElement = document.documentElement;\r\n\r\n        this.viewportHeight = documentElement.clientHeight;\r\n    }\r\n\r\n    private getScrollY(): number {\r\n        return window.scrollY;\r\n    }\r\n}\r\n","import { CLASS_NAMES } from \"./constants\";\r\nimport ReadingProgressBarOptions from \"./interfaces/ReadingProgressBarOptions.interface\";\r\n\r\nexport class ProgressBar {\r\n    private progressBarTrack: HTMLDivElement;\r\n    private value = 0;\r\n\r\n    constructor(\r\n        private element: Element,\r\n        private options: ReadingProgressBarOptions\r\n    ) {\r\n        this.initialize();\r\n    }\r\n\r\n    public setStatePercentage(value: number) {\r\n        let newValue = value;\r\n\r\n        if (value > 100) {\r\n            newValue = 100;\r\n        } else if (newValue < 0) {\r\n            newValue = 0;\r\n        }\r\n\r\n        this.applyState(newValue);\r\n    }\r\n\r\n    public dispose() {\r\n        this.progressBarTrack.remove();\r\n        this.progressBarTrack = null;\r\n        this.element.classList.remove(CLASS_NAMES.progressBarElement);\r\n\r\n        if (this.options.cssClass) {\r\n            this.element.classList.remove(this.options.cssClass);\r\n        }\r\n\r\n        this.element = null;\r\n    }\r\n\r\n    private applyState(value: number) {\r\n        this.value = value;\r\n\r\n        requestAnimationFrame(() => {\r\n            this.progressBarTrack.style.width = `${value}%`;\r\n        });\r\n    }\r\n\r\n    private initialize() {\r\n        const progressBarTrack = document.createElement('div');\r\n\r\n        progressBarTrack.classList.add(CLASS_NAMES.trackElement);\r\n        this.element.classList.add(this.options.cssClass);\r\n        this.element.classList.add(CLASS_NAMES.progressBarElement);\r\n        this.element.appendChild(progressBarTrack);\r\n        this.progressBarTrack = progressBarTrack;\r\n    }\r\n}\r\n","import ReadingProgressBarOptions from \"./interfaces/ReadingProgressBarOptions.interface\";\r\n\r\nimport { DEFAULT_OPTIONS } from \"./constants\";\r\nimport { Viewport } from \"./Viewport\";\r\nimport { Container } from \"./interfaces/Container.interface\";\r\nimport { ProgressBar } from \"./ProgressBar\";\r\n\r\nclass ReadingProgressBar {\r\n    private viewport: Viewport;\r\n    private progressBar: ProgressBar;\r\n    private options: ReadingProgressBarOptions;\r\n\r\n    constructor(\r\n        element: Element,\r\n        options: Partial<ReadingProgressBarOptions> = {}\r\n    ) {\r\n        this.options = { ...DEFAULT_OPTIONS, ...options };\r\n        this.progressBar = new ProgressBar(element, this.options);\r\n        this.viewport = new Viewport(\r\n            this.options.throttleTimeMs,\r\n            this.getTrackedContainers(this.options.contentContainerClassName)\r\n        );\r\n        this.reset();\r\n\r\n        this.viewport.viewportChange$.subscribe(({ scrollPercentage }) => {\r\n            this.progressBar.setStatePercentage(scrollPercentage);\r\n        });\r\n    }\r\n\r\n    public reset() {\r\n        this.redetectContentContainers();\r\n    }\r\n\r\n    private redetectContentContainers() {\r\n        const { contentContainerClassName } = this.options;\r\n\r\n        this.viewport.addTrackedContainers(\r\n            this.getTrackedContainers(contentContainerClassName)\r\n        );\r\n    }\r\n\r\n    private getTrackedContainers(contentContainerClassName: string) {\r\n        const containers = document.getElementsByClassName(contentContainerClassName);\r\n        const containersToTrack: Container[] = Array.from(containers)\r\n            .map((element, index) => ({\r\n                id: index,\r\n                element\r\n            }));\r\n        \r\n        return containersToTrack;\r\n    }\r\n}\r\n\r\nexport { ReadingProgressBar };"],"names":[],"mappings":"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"}